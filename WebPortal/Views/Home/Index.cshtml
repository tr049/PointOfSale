@{
    ViewBag.Title = "Home";
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Entities.ProductStockDTO> products = ViewBag.Products;
    List<Entities.StockOutDTO> earning = ViewBag.Earning;
    List<Entities.StockInDTO> StockIn = ViewBag.StockIn;
    List<Entities.StockOutDTO> StockOut = ViewBag.StockOut;
    List<Entities.ProductDTO> AllProducts = ViewBag.ProductList;
    double totalQuantity = 0;
    foreach (var item in products)
    {
        totalQuantity += item.Quantity;
    }
    double productSoldCount = ViewBag.TotalProductSold;
    List<int> productSoldList = ViewBag.ProductSoldlst;
}

<div class="row">

    <div class="col-lg-3 col-md-6">
        <div class="panel panel-yellow">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-shopping-cart fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="huge">@ViewBag.NewOrder</div>
                        <div>New Orders!</div>
                    </div>
                </div>
            </div>
            <a href="@Url.Action("Index", "Order")">
                <div class="panel-footer">
                    <span class="pull-left">View Details</span>
                    <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-comments fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div>Customers</div>
                    </div>
                </div>
            </div>
            <a href="@Url.Action("Create", "Customer")">
                <div class="panel-footer">
                    <span class="pull-left">View Details</span>
                    <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-red">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-support fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="huge">13</div>
                        <div>Products</div>
                    </div>
                </div>
            </div>
            <a href="@Url.Action("Index", "Product")">
                <div class="panel-footer">
                    <span class="pull-left">View Details</span>
                    <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="panel panel-green">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-3">
                        <i class="fa fa-users fa-5x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        <div class="huge">@ViewBag.CustomerCount</div>
                        <div>Total Customers!</div>
                    </div>
                </div>
            </div>
            <a href="@Url.Action("Index", "Customer")">
                <div class="panel-footer">
                    <span class="pull-left">View Details</span>
                    <span class="pull-right"><i class="fa fa-arrow-circle-right"></i></span>
                    <div class="clearfix"></div>
                </div>
            </a>
        </div>
    </div>
</div> 
  

<div class="row">
    <div class="col-lg-5">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-bar-chart-o fa-fw"></i> Available product in our Stock</h3>
            </div>
            <div class="panel-body">
                <div id="area-chart"></div>
            </div>
        </div>
    </div>

    <div class="col-lg-7">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-bar-chart-o fa-fw"></i> Earning in this year</h3>
            </div>
            <div class="panel-body">
                <div id="earningChart"></div>
            </div>
        </div>
    </div>

</div>

<div class="row">

    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-bar-chart-o fa-fw"></i> Stock In and Stock Out</h3>
            </div>
            <div class="panel-body">
                <div id="stockChart"></div>
            </div>
        </div>
    </div>

</div>



@section Scripts{
    
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/highcharts-3d.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    
     <script type="text/javascript">
         $(function () {
             var myChart = Highcharts.chart('area-chart', {
                 chart: {
                     plotBackgroundColor: null,
                     plotBorderWidth: null,
                     plotShadow: false,
                     type: 'pie'
                 },
                 title: {
                     text: 'Currently avaible products in our stock'
                 },
                 tooltip: {
                     pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
                 },
                 plotOptions: {
                     pie: {
                         allowPointSelect: true,
                         cursor: 'pointer',
                         dataLabels: {
                             enabled: true,
                             format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                             style: {
                                 color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                             }
                         }
                     }
                 },
                 series: [{
                     name: 'Products',
                     colorByPoint: true,
                     data: [
                     @for (int i = 0; i < products.Count; i++)
                     {
                         if(products.Count - 1 != i)
                        {
                            <text>
                            ['@products[i].Name',  @(products[i].Quantity/ totalQuantity )],
                            </text>
                        }
                        else
                        {
                            <text>
                            ['@products[i].Name', @(products[i].Quantity/ totalQuantity )]
                            </text>
                        }
                     }

                     ]
                 }]
             });
         });



         $(function () {
             var myChart = Highcharts.chart('earningChart', {
                 title: {
                     text: 'Earning between @DateTime.Now.AddDays(-6).ToShortDateString() - @DateTime.Now.ToShortDateString()'
                 },

                 xAxis: {
                     categories: ['@DateTime.Now.AddDays(-6).Date.ToShortDateString()', '@DateTime.Now.AddDays(-5).Date.ToShortDateString()', '@DateTime.Now.AddDays(-4).Date.ToShortDateString()', '@DateTime.Now.AddDays(-3).Date.ToShortDateString()', '@DateTime.Now.AddDays(-2).Date.ToShortDateString()', '@DateTime.Now.AddDays(-1).Date.ToShortDateString()', '@DateTime.Now.AddDays(-0).Date.ToShortDateString()']
                 },

                 series: [{
                     type: 'column',
                     name: 'Earning',
                     colorByPoint: true,
                     data: [
                         @for (var i = 6; i >= 0; i--) {
                            if(i != 0)
                            {
                                <text>
                                    @earning.Where(c => c.Date.ToShortDateString() == DateTime.Now.AddDays( 0 - i).ToShortDateString()).Sum(c => c.Price),
                                </text>
                             }
                             else
                             {
                                 <text>
                                    @earning.Where(c => c.Date.ToShortDateString() == DateTime.Now.AddDays(0 - i).ToShortDateString()).Sum(c => c.Price)
                                </text>
                             }

                         }

                     ],
                     showInLegend: false
                 }]

             });
         });

         var stockArr = [];
         @for (int i = 0; i < AllProducts.Count; i++)
         {
             var obj = StockIn.Where(x => x.Product.Name == AllProducts[i].Name).ToList();
             if (obj.Count == 0 )
             {
                 Html.Raw("stockArr.push(0)");

             }
             else
             {
                @:stockArr.push(@obj[0].Quantity);
            }
         }

         var stockOutArr = [];
         @for (int i = 0; i < AllProducts.Count; i++)
         {
             var obj = StockOut.Where(x => x.Product.Name == AllProducts[i].Name).ToList();
             if (obj.Count == 0 )
             {
                     Html.Raw("stockOutArr.push(0)");

             }
             else
             {
                 @:stockOutArr.push(@obj[0].Quantity);
             }
         }



         $(function () {
             var myChart = Highcharts.chart('stockChart', {
                 chart: {
                     type: 'bar'
                 },
                 title: {
                     text: 'Stock Balance'
                 },
                 xAxis: {
                     categories: [

                             @for (int i = 0; i < AllProducts.Count; i++)
                             {
                                 if(i != AllProducts.Count - 1)
                                 {
                                    <text>
                                        '@AllProducts[i].Name',
                                    </text>
                                 }
                                 else
                                 {
                                    <text>
                                    '@AllProducts[i].Name'
                                    </text>
                                 }

                             }


                     ]
                 },
                 yAxis: {
                     min: 0,
                     title: {
                         text: 'Total Stock In and Stock Out'
                     }
                 },
                 legend: {
                     reversed: true
                 },
                 plotOptions: {
                     series: {
                         stacking: 'normal'
                     }
                 },
                 series: [{
                     name: 'Stock In',
                     data: stockArr
                 },
                 {
                     name: 'Stock Out',
                     data: stockOutArr
                 }]
             });
         });




</script>    
    
}